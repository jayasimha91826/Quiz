const questions = [
  // Category 1 - Easy

  {
    category: "Category 1",
    difficulty: "easy",
    question: "What is React?",
    options: ["Library", "Framework", "Language", "Tool"],
    answer: "Library",
  },
  {
    category: "Category 1",
    difficulty: "easy",
    question: "What is JSX?",
    options: ["JavaScript Syntax", "Java XML", "JavaScript XML", "HTML"],
    answer: "JavaScript XML",
  },
  {
    category: "Category 1",
    difficulty: "easy",
    question: "Which method is used to render components?",
    options: ["render()", "display()", "show()", "output()"],
    answer: "render()",
  },
  {
    category: "Category 1",
    difficulty: "easy",
    question: "Which hook is used to manage state in functional components?",
    options: ["useEffect", "useState", "useContext", "useRef"],
    answer: "useState",
  },
  {
    category: "Category 1",
    difficulty: "easy",
    question: "What is the virtual DOM in React?",
    options: [
      "A copy of the real DOM",
      "A separate HTML DOM",
      "A new type of DOM",
      "None of the above",
    ],
    answer: "A copy of the real DOM",
  },
  {
    category: "Category 1",
    difficulty: "easy",
    question: "What is a React component?",
    options: ["A function or class", "A library", "A method", "A module"],
    answer: "A function or class",
  },
  {
    category: "Category 1",
    difficulty: "easy",
    question: "What is the purpose of React Router?",
    options: [
      "To style components",
      "To handle data fetching",
      "To manage routing in a web app",
      "To manage state",
    ],
    answer: "To manage routing in a web app",
  },
  {
    category: "Category 1",
    difficulty: "easy",
    question: "What is a higher-order component?",
    options: [
      "A component that renders a list",
      "A component that returns another component",
      "A function",
      "A class",
    ],
    answer: "A component that returns another component",
  },
  {
    category: "Category 1",
    difficulty: "easy",
    question: "How do you pass data from parent to child components?",
    options: ["With state", "With props", "With context", "With useEffect"],
    answer: "With props",
  },
  {
    category: "Category 1",
    difficulty: "easy",
    question: "What keyword is used to create a constant in React?",
    options: ["var", "let", "const", "constant"],
    answer: "const",
  },

  // Category 1 - Medium
  {
    category: "Category 1",
    difficulty: "medium",
    question:
      "What hook is used to handle side effects in functional components?",
    options: ["useState", "useEffect", "useRef", "useMemo"],
    answer: "useEffect",
  },
  {
    category: "Category 1",
    difficulty: "medium",
    question:
      "What is the default behavior of useEffect when no dependencies are provided?",
    options: [
      "Runs once after every render",
      "Runs on every render",
      "Runs only on the first render",
      "Runs on state change",
    ],
    answer: "Runs on every render",
  },
  {
    category: "Category 1",
    difficulty: "medium",
    question: "What is a controlled component in React?",
    options: [
      "A component that controls state",
      "A component that receives props",
      "A component that handles its own state",
      "A component that is controlled by a parent component",
    ],
    answer: "A component that is controlled by a parent component",
  },
  {
    category: "Category 1",
    difficulty: "medium",
    question: 'What does the "key" prop help React identify?',
    options: [
      "Duplicate components",
      "Which items have changed, are added, or removed",
      "Which state has changed",
      "None of the above",
    ],
    answer: "Which items have changed, are added, or removed",
  },
  {
    category: "Category 1",
    difficulty: "medium",
    question: "How do you prevent re-rendering of a component?",
    options: ["useEffect", "useMemo", "useRef", "React.memo"],
    answer: "React.memo",
  },
  {
    category: "Category 1",
    difficulty: "medium",
    question: "What is the purpose of React Context?",
    options: [
      "To pass data deeply through component trees",
      "To create components",
      "To manage state",
      "To optimize performance",
    ],
    answer: "To pass data deeply through component trees",
  },
  {
    category: "Category 1",
    difficulty: "medium",
    question: "Which React hook can be used to reference DOM elements?",
    options: ["useRef", "useState", "useEffect", "useMemo"],
    answer: "useRef",
  },
  {
    category: "Category 1",
    difficulty: "medium",
    question: "What is React.lazy used for?",
    options: [
      "Lazy loading components",
      "Delay function execution",
      "State management",
      "Handling side effects",
    ],
    answer: "Lazy loading components",
  },
  {
    category: "Category 1",
    difficulty: "medium",
    question: "What is a custom hook?",
    options: [
      "A React hook from a library",
      "A hook created to reuse logic between components",
      "A hook that manipulates state",
      "None of the above",
    ],
    answer: "A hook created to reuse logic between components",
  },
  {
    category: "Category 1",
    difficulty: "medium",
    question: "How do you optimize performance for a large list in React?",
    options: [
      "useEffect",
      "React.Fragment",
      "Virtualization",
      "Component Keys",
    ],
    answer: "Virtualization",
  },

  // Category 1 - Hard

  {
    category: "Category 1",
    difficulty: "hard",
    question: "What is the purpose of the useReducer hook?",
    options: [
      "To manage side effects",
      "To manage complex state logic",
      "To handle asynchronous operations",
      "To pass data between components",
    ],
    answer: "To manage complex state logic",
  },
  {
    category: "Category 1",
    difficulty: "hard",
    question: 'What does the "forwardRef" function do?',
    options: [
      "Handles side effects",
      "Passes refs to child components",
      "Allows lazy loading",
      "Prevents re-rendering",
    ],
    answer: "Passes refs to child components",
  },
  {
    category: "Category 1",
    difficulty: "hard",
    question: 'What does "React.StrictMode" do?',
    options: [
      "Checks for potential problems in the application",
      "Prevents unnecessary re-renders",
      "Optimizes performance",
      "Enforces strict types",
    ],
    answer: "Checks for potential problems in the application",
  },
  {
    category: "Category 1",
    difficulty: "hard",
    question: "What is the purpose of useMemo?",
    options: [
      "To cache functions",
      "To store previous renders",
      "To memoize expensive calculations",
      "To handle side effects",
    ],
    answer: "To memoize expensive calculations",
  },
  {
    category: "Category 1",
    difficulty: "hard",
    question: "What does the Profiler API in React help with?",
    options: [
      "State management",
      "Profiling the performance of components",
      "Handling errors",
      "Routing",
    ],
    answer: "Profiling the performance of components",
  },
  {
    category: "Category 1",
    difficulty: "hard",
    question: "How do you handle errors in React components?",
    options: ["useEffect", "Error boundaries", "useReducer", "React.memo"],
    answer: "Error boundaries",
  },
  {
    category: "Category 1",
    difficulty: "hard",
    question: "What is server-side rendering (SSR) in React?",
    options: [
      "Rendering on the client side",
      "Rendering HTML on the server before sending it to the client",
      "Lazy loading components",
      "None of the above",
    ],
    answer: "Rendering HTML on the server before sending it to the client",
  },
  {
    category: "Category 1",
    difficulty: "hard",
    question: 'What is the difference between "useMemo" and "useCallback"?',
    options: [
      "useMemo caches values, useCallback caches functions",
      "Both cache functions",
      "useMemo handles side effects, useCallback handles state",
      "None of the above",
    ],
    answer: "useMemo caches values, useCallback caches functions",
  },
  {
    category: "Category 1",
    difficulty: "hard",
    question: "What is React Concurrent Mode?",
    options: [
      "A feature that allows React to work on multiple tasks simultaneously",
      "A strict rendering mode",
      "An outdated React feature",
      "None of the above",
    ],
    answer:
      "A feature that allows React to work on multiple tasks simultaneously",
  },
  {
    category: "Category 1",
    difficulty: "hard",
    question: "What is React Fiber?",
    options: [
      "A new reconciliation engine",
      "A React hook",
      "A tool for state management",
      "A React component",
    ],
    answer: "A new reconciliation engine",
  },

  // Easy Level
  {
    category: "Category 2",
    difficulty: "easy",
    question: "What does HTML stand for?",
    options: [
      "HyperText Markup Language",
      "HyperText Machine Language",
      "Hyperlink and Text Markup Language",
      "HyperTool Markup Language",
    ],
    answer: "HyperText Markup Language",
  },
  {
    category: "Category 2",
    difficulty: "easy",
    question: "Which tag is used for the largest heading?",
    options: ["<h6>", "<h1>", "<h3>", "<head>"],
    answer: "<h1>",
  },
  {
    category: "Category 2",
    difficulty: "easy",
    question: "Which tag is used to create a hyperlink?",
    options: ["<link>", "<a>", "<href>", "<nav>"],
    answer: "<a>",
  },
  {
    category: "Category 2",
    difficulty: "easy",
    question: "Which tag is used to insert an image in HTML?",
    options: ["<img>", "<picture>", "<src>", "<image>"],
    answer: "<img>",
  },
  {
    category: "Category 2",
    difficulty: "easy",
    question: "How do you create an ordered list?",
    options: ["<ul>", "<ol>", "<li>", "<list>"],
    answer: "<ol>",
  },
  {
    category: "Category 2",
    difficulty: "easy",
    question: "Which HTML tag is used to create a paragraph?",
    options: ["<p>", "<para>", "<paragraph>", "<text>"],
    answer: "<p>",
  },
  {
    category: "Category 2",
    difficulty: "easy",
    question:
      "Which attribute is used to provide a unique identifier to an element?",
    options: ["class", "id", "name", "unique"],
    answer: "id",
  },
  {
    category: "Category 2",
    difficulty: "easy",
    question: "How do you specify the language of an HTML document?",
    options: ["lang attribute", "lang tag", "language attribute", "meta tag"],
    answer: "lang attribute",
  },
  {
    category: "Category 2",
    difficulty: "easy",
    question: "Which element is used for creating a form in HTML?",
    options: ["<form>", "<input>", "<button>", "<submit>"],
    answer: "<form>",
  },
  {
    category: "Category 2",
    difficulty: "easy",
    question: "What is the default file extension for HTML files?",
    options: [".htm", ".xml", ".html", ".txt"],
    answer: ".html",
  },

  // Medium Level
  {
    category: "Category 2",
    difficulty: "medium",
    question: "What is the purpose of the alt attribute in an <img> tag?",
    options: [
      "To specify the image size",
      "To describe the image",
      "To specify the image format",
      "To link the image",
    ],
    answer: "To describe the image",
  },
  {
    category: "Category 2",
    difficulty: "medium",
    question: "Which HTML tag is used to define an inline frame?",
    options: ["<frame>", "<iframe>", "<frameset>", "<embed>"],
    answer: "<iframe>",
  },
  {
    category: "Category 2",
    difficulty: "medium",
    question: "Which tag is used to create a dropdown list in HTML?",
    options: ["<dropdown>", "<select>", "<option>", "<list>"],
    answer: "<select>",
  },
  {
    category: "Category 2",
    difficulty: "medium",
    question: "Which attribute is used to open a link in a new tab?",
    options: [
      'href="_blank"',
      'target="_new"',
      'target="_blank"',
      'link="_blank"',
    ],
    answer: 'target="_blank"',
  },
  {
    category: "Category 2",
    difficulty: "medium",
    question:
      "Which HTML element is used for creating a multi-line text input?",
    options: ["<textarea>", "<input>", "<form>", "<text>"],
    answer: "<textarea>",
  },
  {
    category: "Category 2",
    difficulty: "medium",
    question: "Which tag is used to define a section in a document?",
    options: ["<div>", "<section>", "<article>", "<header>"],
    answer: "<section>",
  },
  {
    category: "Category 2",
    difficulty: "medium",
    question: "How do you comment out code in HTML?",
    options: [
      "<!-- Comment -->",
      "/* Comment */",
      "// Comment",
      "{# Comment #}",
    ],
    answer: "<!-- Comment -->",
  },
  {
    category: "Category 2",
    difficulty: "medium",
    question: "What is the use of the <meta> tag in HTML?",
    options: [
      "To link external resources",
      "To define metadata",
      "To create links",
      "To define a list",
    ],
    answer: "To define metadata",
  },
  {
    category: "Category 2",
    difficulty: "medium",
    question: "Which HTML element is used to play audio files?",
    options: ["<sound>", "<audio>", "<play>", "<media>"],
    answer: "<audio>",
  },
  {
    category: "Category 2",
    difficulty: "medium",
    question: "How do you define the background color of an HTML element?",
    options: ["background-color", "bg-color", "background", "color-bg"],
    answer: "background-color",
  },

  // Hard Level
  {
    category: "Category 2",
    difficulty: "hard",
    question: "What is the difference between <section> and <article> tags?",
    options: [
      "No difference",
      "section is for sections, article is for individual content",
      "section is block-level, article is inline",
      "article is for forms",
    ],
    answer: "section is for sections, article is for individual content",
  },
  {
    category: "Category 2",
    difficulty: "hard",
    question: "What is the purpose of the <picture> tag in HTML5?",
    options: [
      "To create an image",
      "To define multiple image sources",
      "To define a video source",
      "To create an animated image",
    ],
    answer: "To define multiple image sources",
  },
  {
    category: "Category 2",
    difficulty: "hard",
    question: "What does the <noscript> tag define?",
    options: [
      "No HTML",
      "No CSS",
      "Fallback content for users without JavaScript",
      "HTML without styles",
    ],
    answer: "Fallback content for users without JavaScript",
  },
  {
    category: "Category 2",
    difficulty: "hard",
    question: "Which tag is used to embed a video in HTML5?",
    options: ["<video>", "<embed>", "<source>", "<media>"],
    answer: "<video>",
  },
  {
    category: "Category 2",
    difficulty: "hard",
    question: "What is the use of the <data> tag in HTML5?",
    options: [
      "For form input",
      "To link external resources",
      "To associate machine-readable content",
      "To define sections",
    ],
    answer: "To associate machine-readable content",
  },
  {
    category: "Category 2",
    difficulty: "hard",
    question: 'What does the "viewport" meta tag control?',
    options: [
      "The browser rendering",
      "The width and scaling of the page on different devices",
      "Page height",
      "Color scheme",
    ],
    answer: "The width and scaling of the page on different devices",
  },
  {
    category: "Category 2",
    difficulty: "hard",
    question: "How do you add an external script to an HTML document?",
    options: [
      '<script src="file.js">',
      '<link href="file.js">',
      '<style src="file.js">',
      '<script link="file.js">',
    ],
    answer: '<script src="file.js">',
  },
  {
    category: "Category 2",
    difficulty: "hard",
    question: "What is the purpose of the <base> tag in HTML?",
    options: [
      "To define the document base URL",
      "To define a base color",
      "To link CSS",
      "To create headings",
    ],
    answer: "To define the document base URL",
  },
  {
    category: "Category 2",
    difficulty: "hard",
    question: "How do you create a tooltip in HTML?",
    options: [
      "Using title attribute",
      "Using tooltip tag",
      "Using alt attribute",
      "Using hover tag",
    ],
    answer: "Using title attribute",
  },
  {
    category: "Category 2",
    difficulty: "hard",
    question: "Which HTML5 API is used for storing data in the browser?",
    options: ["Session Storage", "Local Storage", "Both", "Cookies"],
    answer: "Both",
  },

  // Easy Level
  {
    category: "Category 3",
    difficulty: "easy",
    question: "What does CSS stand for?",
    options: [
      "Cascading Style Sheets",
      "Creative Style Sheets",
      "Computer Style Sheets",
      "Colorful Style Sheets",
    ],
    answer: "Cascading Style Sheets",
  },
  {
    category: "Category 3",
    difficulty: "easy",
    question: "Which property is used to change the background color?",
    options: ["color", "background-color", "bgcolor", "background"],
    answer: "background-color",
  },
  {
    category: "Category 3",
    difficulty: "easy",
    question: "Which property is used to change the text color of an element?",
    options: ["font-color", "text-color", "color", "text-style"],
    answer: "color",
  },
  {
    category: "Category 3",
    difficulty: "easy",
    question: 'How do you select an element with id "header"?',
    options: ["header", "#header", ".header", "*header"],
    answer: "#header",
  },
  {
    category: "Category 3",
    difficulty: "easy",
    question: "Which property controls the text size?",
    options: ["font-style", "font-size", "text-size", "text-style"],
    answer: "font-size",
  },
  {
    category: "Category 3",
    difficulty: "easy",
    question: "Which property is used to create space between elements?",
    options: ["spacing", "padding", "margin", "border"],
    answer: "margin",
  },
  {
    category: "Category 3",
    difficulty: "easy",
    question: "How do you make text bold in CSS?",
    options: [
      "font-weight: bold",
      "text-style: bold",
      "font-style: bold",
      "text-weight: bold",
    ],
    answer: "font-weight: bold",
  },
  {
    category: "Category 3",
    difficulty: "easy",
    question: "Which property is used to center text?",
    options: ["text-align", "align-text", "center-text", "text-center"],
    answer: "text-align",
  },
  {
    category: "Category 3",
    difficulty: "easy",
    question: "Which CSS property adds space inside an element’s border?",
    options: ["margin", "padding", "border-spacing", "spacing"],
    answer: "padding",
  },
  {
    category: "Category 3",
    difficulty: "easy",
    question: "What is the default display value for a <div> element?",
    options: ["inline", "inline-block", "block", "none"],
    answer: "block",
  },

  // Medium Level
  {
    category: "Category 3",
    difficulty: "medium",
    question: "Which CSS property is used to change the font of an element?",
    options: ["font-family", "font-type", "text-font", "font-style"],
    answer: "font-family",
  },
  {
    category: "Category 3",
    difficulty: "medium",
    question: "What is the z-index property used for?",
    options: [
      "To control stacking order",
      "To set background color",
      "To position elements",
      "To control font size",
    ],
    answer: "To control stacking order",
  },
  {
    category: "Category 3",
    difficulty: "medium",
    question: "How do you make a list item appear without bullet points?",
    options: [
      "list-style: none",
      "text-decoration: none",
      "bullet: none",
      "list: no-bullets",
    ],
    answer: "list-style: none",
  },
  {
    category: "Category 3",
    difficulty: "medium",
    question: "Which property would you use to make an element hidden?",
    options: [
      "display: none",
      "visibility: hidden",
      "opacity: 0",
      "All of the above",
    ],
    answer: "All of the above",
  },
  {
    category: "Category 3",
    difficulty: "medium",
    question:
      "Which CSS property is used to set the spacing between characters?",
    options: ["word-spacing", "letter-spacing", "text-spacing", "spacing"],
    answer: "letter-spacing",
  },
  {
    category: "Category 3",
    difficulty: "medium",
    question: "How do you select all <p> elements inside a <div> element?",
    options: ["div p", "div > p", "div + p", "div p:all"],
    answer: "div p",
  },
  {
    category: "Category 3",
    difficulty: "medium",
    question: "Which property is used to change the left margin of an element?",
    options: ["padding-left", "margin-left", "left-margin", "spacing-left"],
    answer: "margin-left",
  },
  {
    category: "Category 3",
    difficulty: "medium",
    question:
      "Which of the following is used to define flexbox container in CSS?",
    options: [
      "display: flex",
      "flex-direction: row",
      "display: block",
      "flex-item",
    ],
    answer: "display: flex",
  },
  {
    category: "Category 3",
    difficulty: "medium",
    question: "How do you make an element responsive using CSS?",
    options: [
      "Using media queries",
      "Using float",
      "Using flexbox",
      "Using all of the above",
    ],
    answer: "Using all of the above",
  },
  {
    category: "Category 3",
    difficulty: "medium",
    question: "Which CSS property is used to create rounded corners?",
    options: ["border-radius", "corner-radius", "round-border", "border-round"],
    answer: "border-radius",
  },

  // Hard Level
  {
    category: "Category 3",
    difficulty: "hard",
    question:
      "Which value of the position property places an element relative to the viewport?",
    options: ["fixed", "absolute", "relative", "sticky"],
    answer: "fixed",
  },
  {
    category: "Category 3",
    difficulty: "hard",
    question:
      'What is the difference between "inline" and "inline-block" elements?',
    options: [
      "inline elements do not respect height/width; inline-block does",
      "inline-block elements have margin",
      "inline elements cannot have padding",
      "There is no difference",
    ],
    answer: "inline elements do not respect height/width; inline-block does",
  },
  {
    category: "Category 3",
    difficulty: "hard",
    question: 'What does the "vh" unit represent in CSS?',
    options: [
      "Viewport Height",
      "Virtual Height",
      "View Height",
      "Visual Height",
    ],
    answer: "Viewport Height",
  },
  {
    category: "Category 3",
    difficulty: "hard",
    question: "How do you set a minimum width for an element?",
    options: ["min-width", "max-width", "width-min", "width"],
    answer: "min-width",
  },
  {
    category: "Category 3",
    difficulty: "hard",
    question: 'What is the use of the "object-fit" property?',
    options: [
      "To specify how an image or video should be resized",
      "To set an object's size",
      "To change the position of an element",
      "To set the display of an object",
    ],
    answer: "To specify how an image or video should be resized",
  },
  {
    category: "Category 3",
    difficulty: "hard",
    question:
      "Which CSS property is used to control the horizontal alignment of text?",
    options: ["text-align", "align-items", "float", "justify-content"],
    answer: "text-align",
  },
  {
    category: "Category 3",
    difficulty: "hard",
    question: 'What is the purpose of the "box-sizing" property?',
    options: [
      "To control whether padding and border are included in an element's total width and height",
      "To adjust the size of boxes",
      "To create flexbox",
      "To control padding",
    ],
    answer:
      "To control whether padding and border are included in an element's total width and height",
  },
  {
    category: "Category 3",
    difficulty: "hard",
    question: 'Which CSS property is used to make the element "float"?',
    options: ["float", "position", "display", "align"],
    answer: "float",
  },
  {
    category: "Category 3",
    difficulty: "hard",
    question: "What is a media query in CSS?",
    options: [
      "It is used to make websites responsive",
      "It is used to add media files",
      "It is used to define styles",
      "It is used to set color schemes",
    ],
    answer: "It is used to make websites responsive",
  },
  {
    category: "Category 3",
    difficulty: "hard",
    question: "How do you apply styles to specific devices using CSS?",
    options: [
      "Using media queries",
      "Using @device",
      "Using @viewport",
      "Using CSS classes",
    ],
    answer: "Using media queries",
  },
  // Easy Level
  {
    category: "Category 4",
    difficulty: "easy",
    question:
      'What is the correct syntax for referring to an external script called "app.js"?',
    options: [
      '<script href="app.js">',
      '<script src="app.js">',
      '<script link="app.js">',
      '<script file="app.js">',
    ],
    answer: '<script src="app.js">',
  },
  {
    category: "Category 4",
    difficulty: "easy",
    question: 'How do you write "Hello World" in an alert box?',
    options: [
      'msg("Hello World");',
      'alertBox("Hello World");',
      'alert("Hello World");',
      'msgBox("Hello World");',
    ],
    answer: 'alert("Hello World");',
  },
  {
    category: "Category 4",
    difficulty: "easy",
    question: "How do you create a function in JavaScript?",
    options: [
      "function:myFunction()",
      "function = myFunction()",
      "function myFunction()",
      "def myFunction()",
    ],
    answer: "function myFunction()",
  },
  {
    category: "Category 4",
    difficulty: "easy",
    question: 'How do you call a function named "myFunction"?',
    options: [
      "call function myFunction()",
      "myFunction()",
      "call myFunction()",
      "run.myFunction()",
    ],
    answer: "myFunction()",
  },
  {
    category: "Category 4",
    difficulty: "easy",
    question: "How do you declare a JavaScript variable?",
    options: [
      "var carName;",
      "variable carName;",
      "v carName;",
      "declare carName;",
    ],
    answer: "var carName;",
  },
  {
    category: "Category 4",
    difficulty: "easy",
    question: "Inside which HTML element do we put the JavaScript?",
    options: ["<js>", "<javascript>", "<script>", "<scripting>"],
    answer: "<script>",
  },
  {
    category: "Category 4",
    difficulty: "easy",
    question: "Which operator is used to assign a value to a variable?",
    options: ["*", "-", "=", "+"],
    answer: "=",
  },
  {
    category: "Category 4",
    difficulty: "easy",
    question: "How do you write an IF statement in JavaScript?",
    options: ["if i == 5 then", "if (i == 5)", "if i = 5 then", "if i = 5"],
    answer: "if (i == 5)",
  },
  {
    category: "Category 4",
    difficulty: "easy",
    question: "How do you write a FOR loop in JavaScript?",
    options: [
      "for (i = 0; i <= 5)",
      "for i = 1 to 5",
      "for (i <= 5; i++)",
      "for (i = 0; i <= 5; i++)",
    ],
    answer: "for (i = 0; i <= 5; i++)",
  },
  {
    category: "Category 4",
    difficulty: "easy",
    question:
      "What is the correct way to check if two variables are equal in both value and type?",
    options: ["x == y", "x equals y", "x === y", "x ~= y"],
    answer: "x === y",
  },

  // Medium Level
  {
    category: "Category 4",
    difficulty: "medium",
    question: "What is the correct way to write a JavaScript array?",
    options: [
      'var colors = (1:"red", 2:"green", 3:"blue")',
      'var colors = "red", "green", "blue"',
      'var colors = ["red", "green", "blue"]',
      'var colors = {"red", "green", "blue"}',
    ],
    answer: 'var colors = ["red", "green", "blue"]',
  },
  {
    category: "Category 4",
    difficulty: "medium",
    question: "How do you add a comment in JavaScript?",
    options: [
      "<!-- This is a comment -->",
      "// This is a comment",
      "/* This is a comment */",
      "** This is a comment",
    ],
    answer: "// This is a comment",
  },
  {
    category: "Category 4",
    difficulty: "medium",
    question: 'What is the result of this expression: "5" + 3?',
    options: ["8", "53", "NaN", "undefined"],
    answer: "53",
  },
  {
    category: "Category 4",
    difficulty: "medium",
    question: "Which of the following is a JavaScript framework?",
    options: ["React", "Django", "Laravel", "Flask"],
    answer: "React",
  },
  {
    category: "Category 4",
    difficulty: "medium",
    question: "Which method converts a JSON string to a JavaScript object?",
    options: [
      "JSON.parse()",
      "JSON.stringify()",
      "JSON.object()",
      "JSON.toObject()",
    ],
    answer: "JSON.parse()",
  },
  {
    category: "Category 4",
    difficulty: "medium",
    question: "What is the difference between let and var in JavaScript?",
    options: [
      "let has block scope, var does not",
      "var has block scope, let does not",
      "Both have block scope",
      "Neither have block scope",
    ],
    answer: "let has block scope, var does not",
  },
  {
    category: "Category 4",
    difficulty: "medium",
    question: "How do you define a default parameter in JavaScript?",
    options: [
      "function(a, b = 2)",
      "function(a = 2, b)",
      "function(a, b 2)",
      "function(a:2, b)",
    ],
    answer: "function(a, b = 2)",
  },
  {
    category: "Category 4",
    difficulty: "medium",
    question: "Which method adds a new element to the end of an array?",
    options: ["push()", "pop()", "shift()", "concat()"],
    answer: "push()",
  },
  {
    category: "Category 4",
    difficulty: "medium",
    question: 'What does the "this" keyword refer to in JavaScript?',
    options: [
      "The current object",
      "The global object",
      "The previous object",
      "None of the above",
    ],
    answer: "The current object",
  },
  {
    category: "Category 4",
    difficulty: "medium",
    question: "How do you stop an interval timer in JavaScript?",
    options: [
      "clearInterval()",
      "clearTimeout()",
      "stopInterval()",
      "cancelInterval()",
    ],
    answer: "clearInterval()",
  },

  // Hard Level
  {
    category: "Category 4",
    difficulty: "hard",
    question: "What is a closure in JavaScript?",
    options: [
      "A function that remembers its lexical scope even when executed outside that scope",
      "A function inside a block",
      "A function that runs after another function",
      "None of the above",
    ],
    answer:
      "A function that remembers its lexical scope even when executed outside that scope",
  },
  {
    category: "Category 4",
    difficulty: "hard",
    question: 'What is the purpose of the JavaScript "async" keyword?',
    options: [
      "To declare a function that returns a promise",
      "To make a function wait for a promise to resolve",
      "To prevent a function from returning a value",
      "To return immediately from a function",
    ],
    answer: "To declare a function that returns a promise",
  },
  {
    category: "Category 4",
    difficulty: "hard",
    question: "Which statement is true about promises in JavaScript?",
    options: [
      "Promises are used to handle asynchronous operations",
      "A promise can only be resolved or rejected once",
      "Both of the above",
      "None of the above",
    ],
    answer: "Both of the above",
  },
  {
    category: "Category 4",
    difficulty: "hard",
    question: 'What does the "rest" parameter (...) do in JavaScript?',
    options: [
      "Allows a function to accept an indefinite number of arguments",
      "Divides the array into smaller chunks",
      "Returns the last element of an array",
      "None of the above",
    ],
    answer: "Allows a function to accept an indefinite number of arguments",
  },
  {
    category: "Category 4",
    difficulty: "hard",
    question: "What is the use of the spread operator (...) in JavaScript?",
    options: [
      "To expand an iterable into individual elements",
      "To append elements to an array",
      "To reduce the size of an array",
      "None of the above",
    ],
    answer: "To expand an iterable into individual elements",
  },
  {
    category: "Category 4",
    difficulty: "hard",
    question: "What is the difference between == and === in JavaScript?",
    options: [
      "== checks for value equality, === checks for both value and type equality",
      "They are equivalent",
      "== checks for type equality, === checks for value equality",
      "Both check for type equality",
    ],
    answer:
      "== checks for value equality, === checks for both value and type equality",
  },
  {
    category: "Category 4",
    difficulty: "hard",
    question: "What is the event loop in JavaScript?",
    options: [
      "A programming pattern for controlling asynchronous behavior",
      "A loop that listens for events like clicks",
      "A system that manages async code execution order",
      "None of the above",
    ],
    answer: "A system that manages async code execution order",
  },
  {
    category: "Category 4",
    difficulty: "hard",
    question:
      "Which of the following can be used to create a promise in JavaScript?",
    options: [
      "new Promise()",
      "Promise.create()",
      "Promise.construct()",
      "new.promise()",
    ],
    answer: "new Promise()",
  },
  {
    category: "Category 4",
    difficulty: "hard",
    question: "How do you make a function return a promise?",
    options: [
      "Use the async keyword",
      "Use the await keyword",
      'Return "this"',
      "Return a callback",
    ],
    answer: "Use the async keyword",
  },
  {
    category: "Category 4",
    difficulty: "hard",
    question: "What is memoization in JavaScript?",
    options: [
      "A technique to cache function results to improve performance",
      "A way to generate dynamic variables",
      "A loop optimization technique",
      "None of the above",
    ],
    answer: "A technique to cache function results to improve performance",
  },
];

export default questions;
